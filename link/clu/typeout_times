%% Copyright Massachusetts Institute of Technology 1982, 1989

Typeout_Times = proc (T: times, Out: stream);
    stream$PutL(Out,   "Times:");
    stream$PutS(Out,   "   Parse:  ");
    stream$PutRight(Out, time$Unparse(T.Parse.Stop - T.Parse.Start), 15);
    stream$PutS(Out, "\n   Load:   ");
    stream$PutRight(Out, time$Unparse(T.Load.Stop  - T.Load.Start), 15);
    stream$PutS(Out, "\n   Link:   ");
    stream$PutRight(Out, time$Unparse(T.Link.Stop  - T.Link.Start), 15);
    stream$PutS(Out, "\n   Setup:  ");
    stream$PutRight(Out, time$Unparse(T.Setup.Stop  - T.Setup.Start), 15);
    stream$PutS(Out, "\n   Output: ");
    stream$PutRight(Out, time$Unparse(T.Out.Stop   - T.Out.Start), 15);
    Outs: out_times := T.Outs;
    stream$PutS(Out, "\n   ( Constants:     ");
    stream$PutRight(Out, time$Unparse(Outs.Code   - Outs.Consts), 11);
       except Others: stream$PutS(Out, "xxxxxx");
	      end;
    stream$PutS(Out, "\n     Code:          ");
    stream$PutRight(Out, time$Unparse(Outs.Sigs   - Outs.Code), 11);
       except Others: stream$PutS(Out, "xxxxxx");
	      end;
    stream$PutS(Out, "\n     Signals:       ");
    stream$PutRight(Out, time$Unparse(Outs.Excpts   - Outs.Sigs), 11);
       except Others: stream$PutS(Out, "xxxxxx");
	      end;
    stream$PutS(Out, "\n     Except Blocks: ");
    stream$PutRight(Out, time$Unparse(Outs.SymTb   - Outs.Excpts), 11);
       except Others: stream$PutS(Out, "xxxxxx");
	      end;
    stream$PutS(Out, "\n     Symbol Tables: ");
    stream$PutRight(Out, time$Unparse(Outs.SegMp   - Outs.SymTb), 11);
       except Others: stream$PutS(Out, "xxxxxx");
	      end;
    stream$PutS(Out, "\n     Segment Map:   ");
    stream$PutRight(Out, time$Unparse(Outs.Data   - Outs.SegMp), 11);
       except Others: stream$PutS(Out, "xxxxxx");
	      end;
    stream$PutS(Out, "\n     Data Section:  ");
    stream$PutRight(Out, time$Unparse(Outs.BSS   - Outs.Data), 11);
       except Others: stream$PutS(Out, "xxxxxx");
	      end;
    stream$PutS(Out, "\n     BSS & Symbols: ");
    stream$PutRight(Out, time$Unparse(Outs.ReWrts   - Outs.BSS), 11);
       except Others: stream$PutS(Out, "xxxxxx");
	      end;
    stream$PutS(Out, "\n     Rewrites:      ");
    stream$PutRight(Out, time$Unparse(Outs.FndRtns   - Outs.ReWrts), 11);
       except Others: stream$PutS(Out, "xxxxxx");
	      end;
    stream$PutS(Out, "\n     Found Rtns:    ");
    stream$PutRight(Out, time$Unparse(Outs.RtnChns   - Outs.FndRtns), 11);
       except Others: stream$PutS(Out, "xxxxxx");
	      end;
    stream$PutS(Out, "\n     Rtn Chains:    ");
    stream$PutRight(Out, time$Unparse(Outs.Pnts   - Outs.RtnChns), 11);
       except Others: stream$PutS(Out, "xxxxxx");
	      end;
    stream$PutS(Out, "\n     Pointers:      ");
    stream$PutRight(Out, time$Unparse(Outs.Done   - Outs.Pnts), 11);
       except Others: stream$PutS(Out, "xxxxxx");
	      end;
    stream$PutS(Out, "\n   )");
    stream$PutS(Out, "\n Total:    ");
    stream$PutRight(Out, time$Unparse(T.Out.Stop   - T.Parse.Start), 15);
       except Others: stream$PutS(Out, "xxxxxx");
	      end;
    stream$PutS(Out, "\n\n");
    end Typeout_Times;
