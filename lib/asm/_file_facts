;; Copyright Massachusetts Institute of Technology 1985, 1989

st%mod	= 6				;; Mode.
st%lnk  = 8				;; Link count.

_file_facts = proc (fn: file_name) returns (int, int)
					signals (not_possible(string))
	wvec	buf	{16}
	file_name_fill(rr, "")		;; Fill in dir part.
	file_name$unparse(rr)
	ifeq	moveq	6, n1
		and	(rr), n1
	then	string$append(rr, '\000')	;; Append a null if necessary.
		end
	pea	buf			;; Push buffer address.
	pea	4(rr)			;; Push file name string addr.
	clr	-(sp)			;; Hack pc.
	moveq	%stat, n0
	move	n0, -(sp)
	trap	0			;; Do the call.
	scc	n1			;; Remember state of carry.
	addq	4, sp			;; Pop pc.
	clr	(sp)+			;; Pop args.
	clr	(sp)+
	ifne	tstb	n1
	then	moveq	1, n0		;; Restore n0.
		lea	buf, r1
		clr	n1
		movew	st%lnk(r1), n1	;; Link count
		add	n1, n1
		addqb	1, n1		;; Integerize link count
		move	n1, -(sp)	;; Push it.
		clr	n1
		movew	st%mod(r1), n1	;; ('movew' instead of 'moveaw' to avoid sign extension)
		movea	n1, rr
		movea	n0, r1		;; Make r1 valid ref.
		lea	1(rr, rr), rr	;; Integerize mode
		return (*, rr)
		end
	movea	n0, rr
	lea	1(rr, rr), rr		;; Save and integerize error code.
	moveq	1, n0			;; Restore n0.
	_erstr(rr)
	signal	not_possible(rr)
	end _file_facts
