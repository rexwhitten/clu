;; Copyright Massachusetts Institute of Technology 1985, 1989

_read_link = proc (fn: file_name, buf: _bytevec) returns (int)
						signals (not_possible(string))
	file_name_fill (fn, "")		;; Fill in dir part
	file_name$unparse(rr)
	ifeq	moveq	6, n1
		and	(rr), n1
	then	string$append(rr, '\000')	;; Append null if necessary.
		end
	movea	buf, r1
	move	(r1), n1		;; Get buffer size.
	asr	1,n1			;; De-integerize it.
	move	n1, -(sp)		;; Push it.
	pea	4(r1)			;; Push buffer pointer.
	pea	4(rr)			;; Push filename.
	clr	-(sp)			;; Hack pc.
	moveq	%readlink, n0
	move	n0, -(sp)
	trap	0
	scc	n1			;; Remember carry state.
	addq	4, sp			;; Pop pc.
	clr	(sp)+			;; Pop args
	clr	(sp)+
	clr	(sp)+
	movea	n0, rr
	lea	1(rr,rr), rr		;; Save and integerize result
	moveq	1, n0			;; Restore n0
	ifne	tstb	n1		;; Was call successful?
	then	return (rr)		;; Yes, return.
		end
	_erstr(rr)			;; No, signal.
	signal	not_possible(rr)
	end _read_link
