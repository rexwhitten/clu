; Copyright Massachusetts Institute of Technology 1985, 1989

_select = proc (cnt, reads, writes, excepts, millis: int)
						returns (int, int, int, int)
						signals (not_possible(string))
	wvec	buf	{5}
	move	rr,n7
	ifle	asr	1,n7
	then	moveq	0,n1
		moveq	0,n2
	elflt	cmpi	1000,n7
	then	moveq	0,n1
		move	n7,n2
		mulu	1000,n2			; get microseconds
	else	swap	n7			; get seconds
		moveq	0,n2
		movew	n7,n2
		swap	n7
		divu	1000,n2
		move	n2,n1
		movew	n7,n2
		divu	1000,n2
		swap	n1
		movew	n2,n1
		swap	n2
		mulu	1000,n2			; get microseconds
	end
	lea	buf,r1
	move	r1,-(sp)			; timeout
	pea	8(r1)				; excepts
	pea	12(r1)				; writes
	pea	16(r1)				; reads
	movem	excepts,n3/n4/n5/n6
	asr	1,n3
	asr	1,n4
	asr	1,n5
	asr	1,n6
	movem	n1/n2/n3/n4/n5,(r1)
	move	n6,-(sp)			; count
	clr	-(sp)
	moveq	%select,n0
	move	n0,-(sp)
	trap	0
	lea	24(sp),sp			; pop stack
	movea	n0,rr
	ifcc
	then	moveq	1,n0			; restore 0
		pea	1(rr,rr)		; count
		movea	8(r1),rr		; reads
		pea	1(rr,rr)
		movea	12(r1),rr		; writes
		pea	1(rr,rr)
		movea	16(r1),rr		; excepts
		lea	1(rr,rr),rr
		return(*, *, *, rr)
	end
	ifeq	cmpib	4,n0			; EINTR
	then	moveq	1,n0
		return(0, 0, 0, 0)
	end
	moveq	1,n0				; restore 0
	lea	1(rr,rr),rr
	_erstr(rr)
	signal	not_possible(rr)
	end _select
