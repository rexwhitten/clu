;; Copyright Massachusetts Institute of Technology 1985, 1989

_ioctl = proc [t: type] (fdesc, reqh, reql: itn, argp: t, disp: int)
						signals (not_possible(string))
	move	rr, n1
	asr	1, n1			;; De-integerize disp.
	add	argp, n1		;; Get beginning of argp (argp + disp)
	move	n1, -(sp)		;; Push it.
	move	reqh, n1		;; Get top word of request.
	asr	1, n1			;; De-integerize it.
	subq	4, sp			;; Allocate longword on stack for request.
	movew	n1, (sp)		;; Put in top word.
	move	reql, n2		;; Get bottom word of request.
	asr	1, n2			;; De-integerize.
	movew	n2, 2(sp)		;; Move into place on stack.
	move	fdesc, n1
	asr	1, n1			;; De-integerize file descriptor
	move	n1, -(sp)		;; Push it.
	clr	-(sp)			;; Hack pc.
	moveq	%ioctl, n0
	move	n0, -(sp)
	trap	0
	scc	n1			;; Remember state of carry.
	addq	4, sp		;; Pop pc.
	clr	(sp)+		;; Pop args.
	clr	(sp)+
	clr	(sp)+
	ifne	tstb	n1
	then	moveq	1, n0		;; Restore n0.
		return
		end
	movea	n0, rr
	lea	1(rr,rr), rr
	moveq	1, n0
	_erstr(n0)
	signal	not_possible(rr)
	end _ioctl
