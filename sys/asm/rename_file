;; Copyright Massachusetts Institute of Technology 1985, 1989

rename_file = proc (ofn, nfn: file_name) signals (not_possible(string))
	file_name_fill (rr, "")		;; Fill in dir part.
	file_name$unparse(rr)
	ifeq	moveq	6, n1
		and	(rr), n1
	then	string$append(rr, '\000')	;; Append null if length of 
 						;; string is a multiple of 4.
		end
	move	rr, -(sp)		;; Save second file name
	file_name_fill (ofn, "")	;; Fill in dir part.
	file_name$unparse(rr)
	ifeq	moveq	6, n1
		and	(rr), n1
	then	string$append(rr, '\000')	;; Append null if necessary.
		end
	movea	(sp)+, r1
	pea	4(r1)			;; Push second arg.
	pea	4(rr)			;; Push first arg.
	clr	-(sp)			;; Push hack pc.
	move	%rename, n0		;; (Can't moveq because %rename = 128)
	move	n0, -(sp)		;; Rename.
	trap	0
	scc	n1			;; Remember carry state.
	tst	(sp)+			;; Pop pc.
	clr	(sp)+			;; Clear and pop first arg.
	clr	(sp)+			;; Clear and pop second arg.
	ifne	tstb	n1
	then	moveq	1,n0		;; Restore n0.
		return
		end
	movea	n0, rr			;; Save error result and integerize.
	lea	1(rr, rr), rr
	moveq	1, n0			;; Restore n0.
	_erstr(rr)
	signal	not_possible(rr)
	end rename_file
	
		
