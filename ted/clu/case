%  Copyright	Massachusetts Institute of Technology     1989
make_upper_case = proc (s: string) returns (string)
    for i: int in int$from_to(1, string$size(s)) do
	c: char := s[i]
	if c >= 'a' cand c <= 'z' then
	   a: act := string$s2ac(s)
	   for i in int$from_to(i, act$size(a)) do
	       c := a[i]
	       if c >= 'a' cand c <= 'z' then
		  a[i] := i2c(c2i(c) - 32)
		  end
	       end
	   return(ac2s(a))
	   end
	end
    return(s)
    end make_upper_case

make_lower_case = proc (s: string) returns (string)
    for i: int in int$from_to(1, string$size(s)) do
	c: char := s[i]
	if c >= 'A' cand c <= 'Z' then
	   a: act := string$s2ac(s)
	   for i in int$from_to(i, act$size(a)) do
	       c := a[i]
	       if c >= 'A' cand c <= 'Z' then
		  a[i] := i2c(c2i(c) + 32)
		  end
	       end
	   return(ac2s(a))
	   end
	end
    return(s)
    end make_lower_case

make_capitalized = proc (s: string) returns (string)
    oc: char := ' '
    for i: int in int$from_to(1, string$size(s)) do
	c: char := s[i]
	if (c >= 'a' cand c <= 'z' cand ~in_range_(oc, "azAZ"))  cor
	   (c >= 'A' cand c <= 'Z' cand oc >= 'A' cand oc <= 'Z')
	   then a: act := string$s2ac(s)
		for i in int$from_to(i, act$size(a)) do
		    c := a[i]
		    if c >= 'a' cand c <= 'z' cand ~in_range_(oc, "azAZ")
		       then a[i] := i2c(c2i(c) - 32)
		     elseif c >= 'A' cand c <= 'Z' cand oc >= 'A' cand oc <= 'Z'
		       then a[i] := i2c(c2i(c) + 32)
		     end
		    oc := c
		    end
		return(ac2s(a))
	   end
	oc := c
	end
    return(s)
    end make_capitalized
